# -*- coding: utf-8 -*-
"""LVADSUSR114_ShaikSharezHussain_Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LHFaGyi14VCfgLJoQ6aPkeOqtcW10ZkA
"""

#1
import numpy as np
import pandas as pd
df=pd.read_csv('/content/auto-mpg.csv')
df

#2
#Data Pre-Processing
df.isnull().sum()

#df.dropna()
#to remove duplicates which is not needed here as there are no null values

df=df.fillna(df.mean())

df.isnull().sum()

#Outliers
import matplotlib.pyplot as plt
plt.boxplot(df['weight'])
plt.boxplot(df)

#removing Outliers
Q1 = np.percentile(df, 25, axis=0)
Q3 = np.percentile(df, 75, axis=0)
Q1 = np.percentile(df, 25, axis=0)
Q3 = np.percentile(df, 75, axis=0)
IQR = Q3 - Q1
lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR
outliers_lower = (df < lower_bound).any(axis=1)
outliers_upper = (df > upper_bound).any(axis=1)
outliers = outliers_lower | outliers_upper
df1 = df[~outliers]

#3
#Exploratory Data Analysis
df.info()

df.describe()

df.head(5)

df.corr()

df.shape

#4
#Model Training and Tesing
#feature selection
import seaborn as sns
sns.heatmap(df.corr())

df

x=df[['cylinders','displacement','weight','acceleration']]
y=df['mpg']

#split dataset
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)

from sklearn.linear_model import LinearRegression
lr=LinearRegression()
lr.fit(x_train,y_train)
y_pred=lr.predict(x_test)

#Model evaluation Metrics
from sklearn.metrics import accuracy_score
from sklearn.metrics import f1_score
acc=f1_score(y_pred,y_test)
acc1=accuracy_score(y_pred,y_test)
print(acc,acc1)

